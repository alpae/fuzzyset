name: release

on:
  pull_request:
  push:
    tags:
      - v*
  workflow_dispatch:


concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  build-wheels:
    name: Build wheel for ${{ matrix.python }}-${{ matrix.buildplat[1] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        # Github Actions doesn't support pairing matrix values together, let's improvise
        # https://github.com/github/feedback/discussions/7835#discussioncomment-1769026
        buildplat:
          - [ubuntu-20.04, manylinux_x86_64]
          - [macos-12, macosx_*]
          - [windows-2019, win_amd64]
          - [windows-2019, win32]
        python: ["cp37", "cp38", "cp39", "cp310", "cp311"]
    env:
      IS_32_BIT: ${{ matrix.buildplat[1] == 'win32' }}
      IS_PUSH: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      IS_SCHEDULE_DISPATCH: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    steps:
    - name: Checkout fuzzyset
      uses: actions/checkout@v3

    # Used to push the built wheels
    - uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: setup rtools for 32-bit
      run: |
        echo "PLAT=i686" >> $env:GITHUB_ENV
        echo "PATH=$env:RTOOLS40_HOME\mingw32\bin;$env:PATH" >> $env:GITHUB_ENV
        gfortran --version
      if: ${{ matrix.buildplat[1] == 'win32' }}

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.12.0
      env:
        CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}

    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.python }}-${{ startsWith(matrix.buildplat[1], 'macosx') && 'macosx' || matrix.buildplat[1] }}
        path: ./wheelhouse/*.whl

  build-sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    env:
      IS_PUSH: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      IS_SCHEDULE_DISPATCH: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    steps:
    - name: Checkout fuzzyset
      uses: actions/checkout@v3

    # Used to push the built wheels
    - uses: actions/setup-python@v4
      with:
        # Build sdist on lowest supported Python
        python-version: "3.x"

    - name: Build sdist
      run: |
        python -m pip install --upgrade pip setuptool
        python -m pip install build twine wheel cython
        python -m build --sdist

    - name: Test the sdist
      run: |
        # TODO: Don't run test suite, and instead build wheels from sdist
        # Depends on pypa/cibuildwheel#1020
        python -m pip install dist/*.gz
        pip install pytest
        pytest
    - name: Check README rendering for PyPI
      run: |
        twine check dist/*
    - uses: actions/upload-artifact@v3
      with:
        name: sdist
        path: ./dist/*

  upload:
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x

    - name: Stage artifacts
      uses: actions/download-artifact@v3

    - name: collect all wheels in single dist/ folder
      run: mv dist-*/*whl dist/

    - name: Upload with twine
      uses: pypa/gh-action-pypi-publish@1.6.4
      with:
        user: ${{ secrets.TWINE_USERNAME }}
        password: ${{ secrets.TWINE_PASSWORD }}

